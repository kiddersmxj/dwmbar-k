cmake_minimum_required (VERSION 3.11)
 
# --- Fetch libs --------------------------------------------------------------

include(FetchContent)

set(FETCHCONTENT_UPDATES_DISCONNECTED TRUE)
FetchContent_Declare(std-k
  GIT_REPOSITORY https://github.com/kiddersmxj/std-k
  GIT_TAG main
)
 
FetchContent_GetProperties(std-k)
if(NOT std-k_POPULATED)
  FetchContent_Populate(std-k)
  add_subdirectory(${std-k_SOURCE_DIR} ${std-k_BINARY_DIR})
endif()
 
# ------------------------------------------------------------------------------

project(dwmbar
  LANGUAGES CXX
  VERSION 1.0.0
)

add_executable(dwmbar src/dwmbar.cpp)
# add_executable(dwmbar src/wrapper.cpp)

target_include_directories(dwmbar
    PRIVATE src
    SHARED ${std-k_SOURCE_DIR}/inc
)
# target_include_directories(dwmbar
#     PRIVATE src
#     SHARED ${std-k_SOURCE_DIR}/inc
# )

target_sources(dwmbar
    PRIVATE src/dwmbar.cpp
    PRIVATE src/bluetooth.cpp
    PRIVATE src/network.cpp
    PRIVATE src/media.cpp
    PRIVATE src/time.cpp
    PRIVATE src/volume.cpp
    PRIVATE src/weather.cpp
    PRIVATE src/battery.cpp
    PRIVATE src/module.cpp
)

install(
    TARGETS dwmbar
    DESTINATION /usr/local/bin/dwmbar-k/
)

# install(
#     TARGETS dwmbar
#     DESTINATION /usr/local/bin/
# )

find_package(ALSA REQUIRED)
if(ALSA_FOUND)                 
    include_directories(${ALSA_INCLUDE_DIRS})
    target_link_libraries(dwmbar
        PRIVATE ${ALSA_LIBRARIES}
        PRIVATE std-k
    )
endif(ALSA_FOUND)  

link_directories( ${std-k_BINARY_DIR} )
message(${CMAKE_CURRENT_BINARY_DIR})
message(${std-k_SOURCE_DIR}/inc)
target_link_libraries(dwmbar
    PUBLIC std-k
)
# target_link_libraries(dwmbar
#     PUBLIC std-k
# )
